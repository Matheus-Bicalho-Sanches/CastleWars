const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando deploy para o Vercel...');

// Verificar se o arquivo vercel.json existe e tem o conte√∫do correto
const vercelConfigPath = path.join(__dirname, 'vercel.json');
const vercelConfig = {
  "version": 2,
  "buildCommand": "npm run build",
  "outputDirectory": "dist",
  "routes": [
    { "handle": "filesystem" },
    { "src": "/assets/(.*)", "dest": "/assets/$1" },
    { "src": "/(.*)", "dest": "/index.html" }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        { "key": "Cross-Origin-Embedder-Policy", "value": "require-corp" },
        { "key": "Cross-Origin-Opener-Policy", "value": "same-origin" }
      ]
    }
  ]
};

// Salvar configura√ß√£o atualizada
fs.writeFileSync(vercelConfigPath, JSON.stringify(vercelConfig, null, 2));
console.log('‚úÖ Arquivo vercel.json atualizado');

// Executar o deploy
try {
  console.log('üîÑ Executando deploy no Vercel...');
  
  // Primeiro, fa√ßa login se necess√°rio (isso solicitar√° que voc√™ fa√ßa login no navegador)
  try {
    execSync('vercel whoami', { stdio: 'ignore' });
    console.log('‚úÖ J√° autenticado no Vercel');
  } catch (e) {
    console.log('üîë Por favor, fa√ßa login no Vercel quando solicitado...');
    execSync('vercel login', { stdio: 'inherit' });
  }

  // Executar o deploy (vai abrir um prompt interativo)
  console.log('‚öôÔ∏è Configurando o deploy...');
  execSync('vercel --prod', { stdio: 'inherit' });
  
  console.log('\n‚úÖ Deploy conclu√≠do com sucesso!');
  console.log('Seu site deve estar dispon√≠vel em alguns minutos.');
} catch (error) {
  console.error('‚ùå Erro durante o deploy:', error.message);
  console.log('\nDicas de solu√ß√£o:');
  console.log('1. Verifique se voc√™ est√° logado na Vercel');
  console.log('2. Verifique se h√° erros de build no console');
  console.log('3. Tente fazer o deploy manualmente: vercel --prod');
} 